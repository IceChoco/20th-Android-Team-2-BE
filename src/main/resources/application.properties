spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
hibernate.use_sql_comments=true

#spring.jpa.hibernate.ddl-auto? ??
#  update: ??? ???? ???? JPA? ?? ??? ??? ????.
#  validate: ???? ???? ????? ???????? ????.
#  create: ??? ???? ???? ???? ?? ????.
#  create-drop: ???? ???? ??????? ??? ? ????.
#  none: ??? ??? ?? ???.
spring.jpa.hibernate.ddl-auto=none

spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml

spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# ??? ????? properties? ??? application-xxx.properties? ???
# xxx?? ??? profile? ???? ?? ?? ??? ? ??
# ?, profile=xxx ?? ??? ???? ?? properties? ???? ??? ? ??
sns.kakao.client.id=cd76ebd8d39822da57fae73dd95b81d3
sns.kako.url=https://kauth.kakao.com/oauth/authorize
sns.kako.token.url=https://kauth.kakao.com/oauth/token
sns.kako.callback.url=http://localhost:8080/api/oauth/callback/KAKAO
sns.kako.client.secret=9fNCDvkua1aA06BYqNVvJcBlFGRCuhkj

jwt.secret=secret-key-for-jwt-authentication-must-be-at-least-32-characters.

#tomcat
server.tomcat.uri-encoding=UTF-8
#server.port=8443
#server.port.http=8080

#ssl (please Input Your key-store file name, Password)
#server.ssl.key-store:
#server.ssl.key-store-password:
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: tomcat

spring.profiles.active=@spring.profiles.active@
spring.profiles.default=dev

# fcm push \uAD6C\uD604
fcm.key.path=classpath:firebase_service_key.json
fcm.key.scope=https://www.googleapis.com/auth/firebase.messaging